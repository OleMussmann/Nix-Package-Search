#!/usr/bin/env bash

HELP="Usage: $(basename "${0}") [OPTION...] PACKAGE_NAME
Find PACKAGE_NAME in available nix packages and sort results by relevance.

  -c, --color          force color preservation
  -h, --help           display this help message and exit
  -n, --no-separator   don't separate matches with a newline
  -s, --scan           query packages and cache results"

SEARCH_FOLDER="${NIX_PACKAGE_SEARCH_FOLDER:-"${HOME}/.nix-package-search"}"
CACHE_FILE="${NIX_PACKAGE_SEARCH_CACHE_FILE:-nps.cache}"

# EXACT matches match nixos.PACKAGE_NAME
EXACT_COLOR="${NIX_PACKAGE_SEARCH_EXACT_COLOR:-01;35}"

# DIRECT matches match nixos.PACKAGE_NAME-other-stuff
DIRECT_COLOR="${NIX_PACKAGE_SEARCH_DIRECT_COLOR:-01;34}"

# INDIRECT matches match nixos.foo-PACKAGE_NAME-other-stuff
INDIRECT_COLOR="${NIX_PACKAGE_SEARCH_INDIRECT_COLOR:-01;32}"

# Separate matches with a newline
PRINT_SEPARATOR="${NIX_PACKAGE_SEARCH_PRINT_SEPARATOR:-true}"

# Display help and exit if no command line arguments are given
if [ $# -eq 0 ]; then
	echo "$HELP"
	exit
fi

# Create cache folder, if not exists
mkdir -p "$SEARCH_FOLDER"

scan() {
	echo "Caching packages..."
	# First writing to a tmp file, so the cache is not destroyed if scanning is interrupted
	nix-env -qaP > "/tmp/$CACHE_FILE"
	mv "/tmp/$CACHE_FILE" "$SEARCH_FOLDER/$CACHE_FILE"
	echo "Done caching"
}

COLOR=auto

for ARGUMENT in "$@"
do
	if [ "$ARGUMENT" == "-h" ] || [ "$ARGUMENT" == "--help" ]; then
		echo "$HELP"
		exit
	elif [ "$ARGUMENT" == "-s" ] || [ "$ARGUMENT" == "--scan" ]; then
		SCAN=true
	elif [ "$ARGUMENT" == "-c" ] || [ "$ARGUMENT" == "--color" ]; then
		COLOR=always
	elif [ "$ARGUMENT" == "-n" ] || [ "$ARGUMENT" == "--no-separator" ]; then
		PRINT_SEPARATOR=false
	else
		STRING=$ARGUMENT
	fi
done

# Query packages and store them in the cache file if requested, or the cache file does not exist yet.
if [ "$SCAN" == "true" ] || ! [ -f "$SEARCH_FOLDER/$CACHE_FILE" ]; then
	scan
fi

if [ "$STRING" ]; then
	# Find any matches in the cache
	# `column -t` shrinks whitespace between columns
	MATCHES=$(grep "$STRING" "$SEARCH_FOLDER/$CACHE_FILE" | column -t)

	# Separate matches 
	EXACT=$(echo "$MATCHES" | grep "^[^\.]*\.$STRING ")
	DIRECT=$(echo "$MATCHES" | grep "^[^\.]*\.$STRING" | grep -v "^[^\.]*\.$STRING ")
	INDIRECT=$(echo "$MATCHES" | grep -v "^[^\.]*\.$STRING")

	if [ "$EXACT" ]; then
		# Print EXACT matches in their own color
		echo "$EXACT" | GREP_COLOR="$EXACT_COLOR" grep --color=$COLOR "$STRING"
	fi
	if [ "$DIRECT" ]; then
		# Print separator if requested and needed
		if [ "$EXACT" ] && [ "$PRINT_SEPARATOR" == "true" ]; then echo; fi
		# Print DIRECT matches in their own color
		echo "$DIRECT" | GREP_COLOR="$DIRECT_COLOR" grep --color=$COLOR "$STRING"
	fi
	if [ "$INDIRECT" ]; then
		# Print separator if requested and needed
		if { [ "$EXACT" ] || [ "$DIRECT" ]; } && [ "$PRINT_SEPARATOR" == "true" ]; then echo; fi
		# Print INDIRECT matches in their own color
		echo "$INDIRECT" | GREP_COLOR="$INDIRECT_COLOR" grep --color=$COLOR "$STRING"
	fi
fi
